version: 2.1

orbs:
  go: circleci/go@1.5.0
  aws-cli: circleci/aws-cli@0.1.13

matrix_aws_regions: &matrix_aws_regions
  matrix:
    parameters:
      aws_region: [ "ap-northeast-1", "ap-northeast-2", "ap-south-1", "ap-southeast-1", "ap-southeast-2",
                    "ca-central-1",
                    "eu-central-1", "eu-north-1", "eu-west-1", "eu-west-2", "eu-west-3",
                    "sa-east-1",
                    "us-east-1", "us-east-2", "us-west-1", "us-west-2" ]

jobs:
  test:
    parameters:
      goversion:
        type: "string"
        default: "1.14"
    executor:
      name: go/default
      tag: << parameters.goversion >>
    steps:
      - checkout
      - go/load-cache
      - go/mod-download
      - go/save-cache
      - go/test:
          covermode: atomic
          failfast: true
          race: true
  build_extension:
    executor:
      name: go/default
      tag: "1.15"
    steps:
      - checkout
      - go/load-cache
      - go/mod-download
      - go/save-cache
      - run:
          name: "Build Binary & Extension ZIP"
          command: make build zip
      - persist_to_workspace:
          root: ~/
          paths:
            - artifacts
      - store_artifacts:
          path: ~/artifacts
  publish_aws:
    docker:
      - image: circleci/golang:1.15
    parameters:
      aws_region:
        type: string
    steps:
      - attach_workspace:
          at: ~/
      - checkout
      - aws-cli/install
      - aws-cli/configure:
          aws-access-key-id: AWS_ACCESS_KEY_ID
          aws-secret-access-key: AWS_SECRET_ACCESS_KEY
      - run:
          name: "Publish extension to AWS"
          command: make publish_aws
          environment:
            AWS_REGION: << parameters.aws_region >>
  publish_github:
    docker:
      - image: cibuilds/github:0.13.0
    steps:
      - attach_workspace:
          at: ~/
      - run:
          name: "Artifacts being published"
          command: |
            echo "about to publish to tag ${CIRCLE_TAG}"
            ls -l ~/artifacts/extensions/*
      - run:
          name: "GHR Draft"
          command: ghr -draft -n ${CIRCLE_TAG} -t ${GITHUB_TOKEN} -u ${CIRCLE_PROJECT_USERNAME} -r ${CIRCLE_PROJECT_REPONAME} -c ${CIRCLE_SHA1} ${CIRCLE_TAG} ~/artifacts/extensions/
  publish_s3:
    docker:
      - image: circleci/golang:1.15
    steps:
      - attach_workspace:
          at: ~/
      - aws-cli/install
      - aws-cli/configure:
          aws-access-key-id: AWS_ACCESS_KEY_ID
          aws-secret-access-key: AWS_SECRET_ACCESS_KEY
          aws-region: AWS_REGION
      - run:
          name: "Artifacts being published"
          command: |
            echo "about to publish ${CIRCLE_TAG} to S3"
            ls -l ~/artifacts/extensions/*
      - run:
          name: "S3 Release"
          command: aws s3 cp ~/artifacts/extensions/honeycomb-lambda-extension s3://honeycomb-builds/honeycombio/honeycomb-lambda-extension/${CIRCLE_TAG}/honeycomb-lambda-extension

workflows:
  nightly:
    triggers:
      - schedule:
          cron: "0 0 * * *"
          filters:
            branches:
              only:
                - main
    jobs:
      - test: &test
          matrix:
            parameters:
              goversion:
                - "1.14"
                - "1.15"

  build:
    jobs:
      - test:
          <<: *test
          filters:
            tags:
              only: /.*/
      - build_extension:
          context: Honeycomb Secrets for Public Repos
          filters:
            tags:
              only: /.*/
            branches:
              ignore: /pull\/.*/
      - publish_s3:
          context: Honeycomb Secrets for Public Repos
          filters:
            tags:
              only: /^v.*/
            branches:
              ignore: /.*/
          requires:
            - test
            - build_extension
      - publish_aws:
          context: Honeycomb Secrets for Public Repos
          <<: *matrix_aws_regions
          filters:
            tags:
              only: /^v.*/
            branches:
              ignore: /.*/
          requires:
            - test
            - build_extension
